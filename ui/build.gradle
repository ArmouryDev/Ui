apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.github.dcendents.android-maven'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    buildFeatures {
        dataBinding = true
    }

    defaultConfig {
        targetSdkVersion 30
        versionCode 92
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    defaultPublishConfig "sdk2230Release"
    flavorDimensions "sdkLevel"

    productFlavors {
        sdk2021 {
            minSdkVersion 20
            dimension "sdkLevel"
            versionName "0.4.20-bc"
        }
        sdk2230 {
            minSdkVersion 22
            dimension "sdkLevel"
            versionName "0.4.20"
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // For Kotlin projects
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    //  DataBinding
    kapt "com.android.databinding:compiler:$databinding_version"

    //  AndroidX
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'

    //    Google
    implementation 'com.google.android.material:material:1.3.0-rc01'

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.ext.coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.ext.coroutine_version"

    //  Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'
    //  Retrofit Coroutines Support
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    //  Armoury
    implementation 'com.github.ArmouryDev:MessageView:0.9.13'

    //  Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.javaDirectories
}

artifacts {
    archives sourcesJar
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
}

group = 'com.github.ArmouryDev.Ui'

if (android.productFlavors.size() > 0) {
    android.libraryVariants.all { variant ->

        if (variant.name.toLowerCase().contains("debug")) {
            return
        }

        def bundleTask = tasks["bundle${variant.name.capitalize()}Aar"]

        artifacts {
            archives(bundleTask.archivePath) {
                classifier variant.flavorName
                builtBy bundleTask
                name = project.name
            }
        }

        def flavorName = variant.flavorName.toLowerCase()
        def flavorSourcesTask = tasks.create(name : "${flavorName}SourcesJar", type: Jar) {
            classifier = "${flavorName}-sources"
            from android.sourceSets.main.javaDirectories
            from android.sourceSets[flavorName].javaDirectories
        }

        artifacts {
            archives flavorSourcesTask
        }

    }
}